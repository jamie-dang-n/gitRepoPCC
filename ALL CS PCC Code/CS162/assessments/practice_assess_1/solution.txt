Task 1: Create a constructor for the InventoryItem class
InventoryItem::InventoryItem(const char name[], float price) {
	strcpy(itemName, name);
	itemPrice = price;	
}

Task 2: Public member function length() for class itemList
int ItemList::length() const {
	return size;	
}

Task 3: Public member function changePrice() for class itemList
void ItemList::changePrice(int index, float price) {
	list[index].setItemPrice(price);	
}

Bonus: I wrote some validation functions in main.cpp so that the changePrice()
Function would receive only good input.

void validInt(int &num, const ItemList inventory) {
	cin >> num;
	while (!cin || cin.peek() != '\n' || num <= 0 || num > inventory.length()) {
		cout << "Error: Please enter a valid integer for the index." << endl;
		cout << "Enter index of item to change: ";
		cin.clear();
		cin.ignore(100, '\n');
		cin >> num;
	}
}

void validFloat(float &num, const ItemList inventory) {
	cin >> num;
	while (!cin || cin.peek() != '\n' || num < 0.0 ) {
		cout << "Error: Please enter a valid price." << endl;
		cout << "Enter new price of the item: ";
		cin.clear();
		cin.ignore(100, '\n');
		cin >> num;
	}
}


